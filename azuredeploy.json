{
  "$schema":
    "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "appName": {
      "type": "string",
      "metadata": {
        "description": "The name of the function app that you wish to create."
      }
    },
    "storageAccountType": {
      "type": "string",
      "defaultValue": "Standard_LRS",
      "allowedValues": ["Standard_LRS", "Standard_GRS", "Standard_RAGRS"],
      "metadata": {
        "description": "Storage Account type"
      }
    },
    "repoURL": {
      "type": "string",
      "defaultValue": "https://github.com/JamieMagee/Youtube-Haikus.git",
      "metadata": {
        "description":
          "The URL for the GitHub repository that contains the project to deploy."
      }
    },
    "branch": {
      "type": "string",
      "defaultValue": "master",
      "metadata": {
        "description": "The branch of the GitHub repository to use."
      }
    },
    "youtubeAccessToken": {
      "type": "string",
      "metadata": {
        "description": "The access token for your Youtube application"
      }
    },
    "youtubeClientId": {
      "type": "string",
      "metadata": {
        "description": "The client ID for your Youtube application"
      }
    },
    "youtubeClientSecret": {
      "type": "string",
      "metadata": {
        "description": "The client secret for your Youtube application"
      }
    },
    "YoutubeRefreshToken": {
      "type": "string",
      "metadata": {
        "description": "The refresh token for your Youtube application"
      }
    },
    "redditClientId": {
      "type": "string",
      "metadata": {
        "description": "The client ID for your Reddit application"
      }
    },
    "redditClientSecret": {
      "type": "string",
      "metadata": {
        "description": "The client secret for your Reddit application"
      }
    },
    "redditUsername": {
      "type": "string",
      "metadata": {
        "description": "The username for your Reddit application"
      }
    },
    "redditPassword": {
      "type": "string",
      "metadata": {
        "description": "The password for your Reddit application"
      }
    }
  },
  "variables": {
    "functionAppName": "[parameters('appName')]",
    "hostingPlanName": "[parameters('appName')]",
    "storageAccountName":
      "[concat(uniquestring(resourceGroup().id), 'azfunctions')]",
    "storageAccountid":
      "[concat(resourceGroup().id,'/providers/','Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[variables('storageAccountName')]",
      "apiVersion": "2017-10-01",
      "location": "[resourceGroup().location]",
      "kind": "Storage",
      "sku": {
        "name": "[parameters('storageAccountType')]"
      }
    },
    {
      "type": "Microsoft.Web/serverfarms",
      "apiVersion": "2015-04-01",
      "name": "[variables('hostingPlanName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "name": "[variables('hostingPlanName')]",
        "computeMode": "Dynamic",
        "sku": "Dynamic"
      }
    },
    {
      "apiVersion": "2015-08-01",
      "type": "Microsoft.Web/sites",
      "name": "[variables('functionAppName')]",
      "location": "[resourceGroup().location]",
      "kind": "functionapp",
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
      ],
      "properties": {
        "serverFarmId":
          "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
        "siteConfig": {
          "appSettings": [
            {
              "name": "AzureWebJobsDashboard",
              "value":
                "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(variables('storageAccountid'),'2015-05-01-preview').key1)]"
            },
            {
              "name": "AzureWebJobsStorage",
              "value":
                "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(variables('storageAccountid'),'2015-05-01-preview').key1)]"
            },
            {
              "name": "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING",
              "value":
                "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(variables('storageAccountid'),'2015-05-01-preview').key1)]"
            },
            {
              "name": "WEBSITE_CONTENTSHARE",
              "value": "[toLower(variables('functionAppName'))]"
            },
            {
              "name": "FUNCTIONS_EXTENSION_VERSION",
              "value": "~1"
            },
            {
              "name": "WEBSITE_NODE_DEFAULT_VERSION",
              "value": "8.9.4"
            },
            {
              "name": "YOUTUBE_ACCESS_TOKEN",
              "value": "[parameters('youtubeAccessToken')]"
            },
            {
              "name": "YOUTUBE_CLIENT_ID",
              "value": "[parameters('youtubeClientId')]"
            },
            {
              "name": "YOUTUBE_CLIENT_SECRET",
              "value": "[parameters('youtubeClientSecret')]"
            },
            {
              "name": "YOUTUBE_REFRESH_TOKEN",
              "value": "[parameters('youtubeRefreshToken')]"
            },
            {
              "name": "REDDIT_CLIENT_ID",
              "value": "[parameters('redditClientId')]"
            },
            {
              "name": "REDDIT_CLIENT_SECRET",
              "value": "[parameters('redditClientSecret')]"
            },
            {
              "name": "REDDIT_USERNAME",
              "value": "[parameters('redditUsername')]"
            },
            {
              "name": "REDDIT_PASSWORD",
              "value": "[parameters('redditPassword')]"
            }
          ]
        }
      },
      "resources": [
        {
          "apiVersion": "2015-08-01",
          "name": "web",
          "type": "sourcecontrols",
          "dependsOn": [
            "[resourceId('Microsoft.Web/Sites', variables('functionAppName'))]"
          ],
          "properties": {
            "RepoUrl": "[parameters('repoURL')]",
            "branch": "[parameters('branch')]",
            "IsManualIntegration": true
          }
        }
      ]
    }
  ]
}
