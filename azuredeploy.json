{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "appName": {
      "type": "string",
      "metadata": {
        "description": "The name of the function app that you wish to create."
      }
    },
    "storageAccountType": {
      "type": "string",
      "defaultValue": "Standard_LRS",
      "allowedValues": [
        "Standard_LRS",
        "Standard_GRS",
        "Standard_RAGRS"
      ],
      "metadata": {
        "description": "Storage Account type"
      }
    },
    "youtubeClientId": {
      "type": "string",
      "metadata": {
        "description": "The client ID for your Youtube application"
      }
    },
    "youtubeClientSecret": {
      "type": "string",
      "metadata": {
        "description": "The client secret for your Youtube application"
      }
    },
    "youtubeRefreshToken": {
      "type": "string",
      "metadata": {
        "description": "The refresh token for your Youtube application"
      }
    },
    "redditClientId": {
      "type": "string",
      "metadata": {
        "description": "The client ID for your Reddit application"
      }
    },
    "redditClientSecret": {
      "type": "string",
      "metadata": {
        "description": "The client secret for your Reddit application"
      }
    },
    "redditRefreshToken": {
      "type": "string",
      "metadata": {
        "description": "The refresh token for your Reddit application"
      }
    },
  },
  "variables": {
    "functionAppName": "[parameters('appName')]",
    "hostingPlanName": "[parameters('appName')]",
    "appInsightsName": "[parameters('appName')]",
    "storageAccountName": "[concat(uniquestring(resourceGroup().id), 'azfunctions')]",
    "storageAccountid": "[concat(resourceGroup().id,'/providers/','Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[variables('storageAccountName')]",
      "apiVersion": "2019-06-01",
      "location": "[resourceGroup().location]",
      "kind": "Storage",
      "sku": {
        "name": "[parameters('storageAccountType')]"
      }
    },
    {
      "type": "Microsoft.Web/serverfarms",
      "apiVersion": "2019-08-01",
      "name": "[variables('hostingPlanName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "name": "[variables('hostingPlanName')]",
        "computeMode": "Dynamic"
      },
      "sku": {
        "name": "Y1",
        "tier": "Dynamic"
      }
    },
    {
      "apiVersion": "2015-05-01",
      "type": "Microsoft.Insights/components",
      "kind": "web",
      "name": "[variables('appInsightsName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "Application_Type": "web",
        "applicationId": "[variables('appInsightsName')]"
      }
    },
    {
      "apiVersion": "2019-08-01",
      "type": "Microsoft.Web/sites",
      "name": "[variables('functionAppName')]",
      "location": "[resourceGroup().location]",
      "kind": "functionapp",
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]",
        "[resourceId('Microsoft.Insights/components', variables('appInsightsName'))]"
      ],
      "properties": {
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
        "siteConfig": {
          "appSettings": [
            {
              "name": "AzureWebJobsDashboard",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(variables('storageAccountid'),'2019-06-01').keys[0].value)]"
            },
            {
              "name": "AzureWebJobsStorage",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(variables('storageAccountid'),'2019-06-01').keys[0].value)]"
            },
            {
              "name": "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(variables('storageAccountid'),'2019-06-01').keys[0].value)]"
            },
            {
              "name": "WEBSITE_CONTENTSHARE",
              "value": "[toLower(variables('functionAppName'))]"
            },
            {
              "name": "FUNCTIONS_EXTENSION_VERSION",
              "value": "~3"
            },
            {
              "name": "FUNCTIONS_WORKER_RUNTIME",
              "value": "dotnet"
            },
            {
              "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
              "value": "[reference(resourceId('microsoft.insights/components/', variables('appInsightsName')), '2015-05-01').InstrumentationKey]"
            },
            {
              "name": "YOUTUBE_CLIENT_ID",
              "value": "[parameters('youtubeClientId')]"
            },
            {
              "name": "YOUTUBE_CLIENT_SECRET",
              "value": "[parameters('youtubeClientSecret')]"
            },
            {
              "name": "YOUTUBE_REFRESH_TOKEN",
              "value": "[parameters('youtubeRefreshToken')]"
            },
            {
              "name": "REDDIT_CLIENT_ID",
              "value": "[parameters('redditClientId')]"
            },
            {
              "name": "REDDIT_CLIENT_SECRET",
              "value": "[parameters('redditClientSecret')]"
            },
            {
              "name": "REDDIT_REFRESH_TOKEN",
              "value": "[parameters('redditRefreshToken')]"
            }
          ]
        }
      }
    }
  ]
}
